[
    {
       "eventName":"Array.creation",
       "and_list": [],
       "or_list": [],
       "search_list": ["(component CONTROL\/Array[0-9][0-9][0-9] activated and initialized)"],
       "keyName":"(Array\\d+)",
       "eventType": "initial"
    },
    {
      "eventName": "Array.destruction",
       "and_list": ["client 'CONTROL/MASTER' has successfully delivered a component release request for curl=CONTROL/Array"],
       "or_list": [],
       "search_list": [],
       "keyName":"(Array\\d+)",
       "eventType": "final"
    },
    {
        "eventName": "Interferometry.init",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Interferometry observing mode starting.)"],
        "keyName": "(Array\\d+)",
        "eventType": "initial"
    },
    {
        "eventName": "Interferometry.sumAntenna",
        "and_list": [],
        "or_list": [],
        "search_list": ["(This array has been set up to use a sum antenna and cannot be used with this observing mode.)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "Interferometry.twoAntennas",
        "and_list": [],
        "or_list": [],
        "search_list": ["(The interferometry observing mode needs an array with at least two antennas.)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "Interferometry.settingUp",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Enabling delay compensation and fringe tracking.)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "Interferometry.settingUpException",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Failed to cleanly activate the Observing Mode)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    
    {
        "eventName": "Interferometry.settingUpEnd",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Completed starting the interferometery observing mode.)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "ObservingMode.beginScan",
        "and_list": [],
        "or_list": [],
        "search_list": ["(logBeginScan)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "ObservingMode.endScan",
        "and_list": [],
        "or_list": [],
        "search_list": ["(endScan)", "(Scan \\d+ was completed)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "ObservingMode.beginScanException",
        "and_list": [],
        "or_list": ["(Cannot publish a scan started event.)", "(Cannot tell data capture the scan has started.)"],
        "search_list": [],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "Interferometry.doSubscanSequence",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Starting doSubscanSequence)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "SubscanSequence.run",
        "and_list": [],
        "or_list": [],
        "search_list": ["(The SubscanSequenceExecutor.run function is starting.)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "SubscanSequence.runException",
        "and_list": [],
        "or_list": ["Cannot start a sub-scan sequence.", "Problem executing a sub-scan sequence containing", "Cannot complete sub-scan"],
        "search_list": [],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "ObservingMode.beginSubscan",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Scan \\d+, sub-scan \\d+ has an intent)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "ObservingMode.endSubscan",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Scan \\d+, sub-scan \\d+ was completed)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "Interferometry.cleanUp",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Interferometry observing mode shutting down.)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "Interferometry.endCleanUp",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Completed shutting down the interferometry observing mode.)"],
        "keyName": "(Array\\d+)",
        "eventType": "final"
    },
    {
        "eventName": "PointingSubArray.callreference",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Trying to get a reference to a component called CONTROL\\/[A-Z]+\\d+\\/MountController thats collocated with the component called CONTROL\\/[A-Z]+\\d+)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "PointingSubArray.antModecontrollercreated",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Creating and initializing all the alma.Control.MountControllerHelper controllers took \\d+.\\d+ seconds.)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "LocalOscillator.callreference",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Trying to get a reference to a component called CONTROL\\/[A-Z]+\\d+\\/AntLOController thats collocated with the component called CONTROL\\/[A-Z]+\\d+)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "LocalOscillator.antModecontrollercreated",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Creating and initializing all the alma.Control.AntLOControllerHelper controllers took \\d+.\\d+ seconds.)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "InterferometryController.start",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Interferometery controller starting.)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "InterferometryController.startingEnd",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Completed starting the interferometery controller.)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "TotalPowerProcessor.start",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Creating the CONTROL\/Array\\d+\/TotalPowerProcessor component)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "TotalPowerProcessor.startEnd",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Created the CONTROL\/Array\\d+\/TotalPowerProcessor component.)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "PointingSubArray.track",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Ensuring enough antennas are in autonomous mode \\(releasing the brakes\\).)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    },
    {
        "eventName": "PointingSubArray.openShutter",
        "and_list": [],
        "or_list": [],
        "search_list": ["(Opening the shutter on all antennas)"],
        "keyName": "(Array\\d+)",
        "eventType": "transition"
    }
    
]